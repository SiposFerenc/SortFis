import java.io.File;
import java.util.Scanner ;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
public class SortareFisiere 
{
  public static void main(String[] args) 
  { Scanner tastatura=new Scanner(System.in); 
    char c ;
// preluarea numelui directorului intr-un sir de caractere
    System.out.println("Furnizati nume director:") ;
    String numedir=tastatura.nextLine() ;
// transmiterea sirului de caractere constructorului clasei File
    File dir = new File(numedir) ;
// verificarea daca exista acest director
    if (dir.isDirectory())
// stocarea continutului directorului intr-o matrice de caractere
      { String s[] = dir.list();
// parcurgerea elementelor matricii  
    	for (int i = 0; i < s.length; i++)
// transmiterea fiecarui element constructorului clasei File
	      { File fis1 = new File(dir.getPath() + "/" + s[i]);
// stabilirea daca elementul matricii este fisier
	        if(fis1.isFile())
// stocarea primului caracter al elementului matricei
// (numelui fisierului) si transformarea in majuscule 
	          { c = s[i].charAt(0);
	  	        c = Character.toUpperCase(c);
// transmiterea sirului de caractere concatenat constructorului clasei File 
	  	        File sdir = new File(numedir + "\\"+c) ; 
// daca primul caracter nu este numeric si nu este literal 
// se modifica sdir	  	     
                if (c < '0' || c> 'Z')
 	    	      { sdir = new File(numedir + "\\_MISC_") ; }
// verificarea daca nu exista subdirectorul 
		        if (!sdir.exists())
// crearea subdirectorului cu metoda predefinita mkdir
	              {
		          try { sdir.mkdir() ; }
 		          catch(SecurityException se){se.printStackTrace();	}  
	           }
// transmiterea caii noului fisier constructorului FILE		       
		       File fis2 = new File(sdir.getPath() + "/" + s[i]) ;
// copierea fisierului, prin metoda creata cpyfis		      
              cpyfis (fis1 , fis2) ;
	      System.out.println("se copiaza fisierul: " + fis1.getName()+" in subdirectorul "+sdir.getPath());
	        }  
	      }	
        }
    else
      {System.out.println("Directorul "+dir.getPath() + " nu exista !"); }
  }
static void cpyfis (File f1  , File f2)
//copierea fisierului, introducand un buffer de 1024 octeti			      
  {            
  try {		
    InputStream  inp = new FileInputStream(f1);
    OutputStream out = new FileOutputStream(f2);
    byte[] buf = new byte[1024];
    int bytesRead;
//citirea fisierului in buffer
    while((bytesRead = inp.read(buf)) > 0)
   	{ out.write(buf, 0, bytesRead); }
    inp.close();
//golirea bufferului, datele scriindu-se in fisier
    out.flush();
    out.close();
      } 
  catch (IOException ioe) {ioe.printStackTrace();}  
  }
 }